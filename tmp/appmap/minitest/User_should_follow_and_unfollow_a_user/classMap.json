[
  {
    "name": "activesupport",
    "type": "package",
    "children": [
      {
        "name": "ActiveSupport",
        "type": "class",
        "children": [
          {
            "name": "Callbacks",
            "type": "class",
            "children": [
              {
                "name": "CallbackSequence",
                "type": "class",
                "children": [
                  {
                    "name": "invoke_before",
                    "type": "function",
                    "labels": [
                      "mvc.before_action"
                    ],
                    "static": false,
                    "location": "/usr/local/bundle/gems/activesupport-7.0.4/lib/active_support/callbacks.rb:594"
                  },
                  {
                    "name": "invoke_after",
                    "type": "function",
                    "labels": [
                      "mvc.after_action"
                    ],
                    "static": false,
                    "location": "/usr/local/bundle/gems/activesupport-7.0.4/lib/active_support/callbacks.rb:598"
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "name": "logger",
    "type": "package",
    "children": [
      {
        "name": "Logger",
        "type": "class",
        "children": [
          {
            "name": "LogDevice",
            "type": "class",
            "children": [
              {
                "name": "write",
                "type": "function",
                "labels": [
                  "log"
                ],
                "static": false,
                "location": "/usr/local/lib/ruby/3.1.0/logger/log_device.rb:31"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "name": "openssl",
    "type": "package",
    "children": [
      {
        "name": "OpenSSL",
        "type": "class",
        "children": [
          {
            "name": "Random",
            "type": "class",
            "children": [
              {
                "name": "random_bytes",
                "type": "function",
                "labels": [
                  "random.secure"
                ],
                "static": true,
                "location": "OpenSSL::Random.random_bytes"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "name": "app/models",
    "type": "package",
    "children": [
      {
        "name": "User",
        "type": "class",
        "children": [
          {
            "name": "following?",
            "type": "function",
            "static": false,
            "location": "app/models/user.rb:107"
          },
          {
            "name": "follow",
            "type": "function",
            "static": false,
            "location": "app/models/user.rb:97"
          },
          {
            "name": "unfollow",
            "type": "function",
            "static": false,
            "location": "app/models/user.rb:102"
          }
        ]
      }
    ]
  },
  {
    "type": "database",
    "name": "Database",
    "children": [
      {
        "type": "query",
        "name": "begin transaction"
      },
      {
        "type": "query",
        "name": "SELECT \"users\".* FROM \"users\" WHERE \"users\".\"id\" = ? LIMIT ?"
      },
      {
        "type": "query",
        "name": "SELECT 1 AS one FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"followed_id\" WHERE \"relationships\".\"follower_id\" = ? AND \"users\".\"id\" = ? LIMIT ?"
      },
      {
        "type": "query",
        "name": "SAVEPOINT active_record_1"
      },
      {
        "type": "query",
        "name": "INSERT INTO \"relationships\" (\"follower_id\", \"followed_id\", \"created_at\", \"updated_at\") VALUES (?, ?, ?, ?)"
      },
      {
        "type": "query",
        "name": "RELEASE SAVEPOINT active_record_1"
      },
      {
        "type": "query",
        "name": "SELECT 1 AS one FROM \"users\" INNER JOIN \"relationships\" ON \"users\".\"id\" = \"relationships\".\"follower_id\" WHERE \"relationships\".\"followed_id\" = ? AND \"users\".\"id\" = ? LIMIT ?"
      },
      {
        "type": "query",
        "name": "DELETE FROM \"relationships\" WHERE \"relationships\".\"follower_id\" = ? AND \"relationships\".\"followed_id\" = ?"
      },
      {
        "type": "query",
        "name": "rollback transaction"
      }
    ]
  }
]